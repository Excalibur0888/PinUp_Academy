// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫—É—Ä—Å–æ–≤
const coursesData = {
    'digital-marketing': {
        id: 'digital-marketing',
        badge: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        title: 'Digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ PRO',
        description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∫—É—Ä—Å –ø–æ digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É: –æ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
        level: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
        duration: '12 –Ω–µ–¥–µ–ª—å',
        students: '94 —Å—Ç—É–¥–µ–Ω—Ç–∞',
        image: 'img/digital-marketing.jpg',
        price: {
            current: '34 900 ‚Ç∏',
            old: '39 900 ‚Ç∏'
        }
    },
    'web-design': {
        id: 'web-design',
        badge: '–î–∏–∑–∞–π–Ω',
        title: '–û—Å–Ω–æ–≤—ã –≤–µ–±-–¥–∏–∑–∞–π–Ω–∞',
        description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω—É–ª—è',
        level: '–ù–∞—á–∞–ª—å–Ω—ã–π',
        duration: '10 –Ω–µ–¥–µ–ª—å',
        students: '142 —Å—Ç—É–¥–µ–Ω—Ç–∞',
        image: 'img/web-design.jpg',
        price: {
            current: '29 900 ‚Ç∏',
            old: null
        }
    },
    'finance-basics': {
        id: 'finance-basics',
        badge: '–§–∏–Ω–∞–Ω—Å—ã',
        title: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å',
        description: '–ù–∞—É—á–∏—Ç–µ—Å—å —É–ø—Ä–∞–≤–ª—è—Ç—å –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥',
        level: '–ù–∞—á–∞–ª—å–Ω—ã–π',
        duration: '8 –Ω–µ–¥–µ–ª—å',
        students: '156 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
        image: 'img/finance-basics.jpg',
        price: {
            current: '19 900 ‚Ç∏',
            old: '24 900 ‚Ç∏'
        }
    },
    'productivity': {
        id: 'productivity',
        badge: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
        title: '–õ–∏—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        description: '–û—Å–≤–æ–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ç–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∏ –ø–æ–≤—ã—Å—å—Ç–µ —Å–≤–æ—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        level: '–ù–∞—á–∞–ª—å–Ω—ã–π',
        duration: '6 –Ω–µ–¥–µ–ª—å',
        students: '78 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
        image: 'img/productivity.jpg',
        price: {
            current: '24 900 ‚Ç∏',
            old: null
        }
    }
};

class CourseCatalog {
    constructor() {
        this.courses = Object.values(coursesData);
        this.filteredCourses = [...this.courses];
        this.initializeFilters();
        this.renderCourses();
    }

    initializeFilters() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
        const searchInput = document.getElementById('searchInput');
        searchInput.addEventListener('input', () => this.filterCourses());

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const categoryFilter = document.getElementById('categoryFilter');
        const levelFilter = document.getElementById('levelFilter');
        const sortFilter = document.getElementById('sortFilter');

        categoryFilter.addEventListener('change', () => this.filterCourses());
        levelFilter.addEventListener('change', () => this.filterCourses());
        sortFilter.addEventListener('change', () => this.filterCourses());
    }

    filterCourses() {
        const searchQuery = document.getElementById('searchInput').value.toLowerCase();
        const categoryValue = document.getElementById('categoryFilter').value;
        const levelValue = document.getElementById('levelFilter').value;
        const sortValue = document.getElementById('sortFilter').value;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        this.filteredCourses = this.courses.filter(course => {
            const matchesSearch = course.title.toLowerCase().includes(searchQuery) ||
                                course.description.toLowerCase().includes(searchQuery);
            const matchesCategory = !categoryValue || course.badge === categoryValue;
            const matchesLevel = !levelValue || course.level === levelValue;

            return matchesSearch && matchesCategory && matchesLevel;
        });

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
        this.sortCourses(sortValue);

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã
        this.renderCourses();
    }

    sortCourses(sortType) {
        switch (sortType) {
            case 'price-asc':
                this.filteredCourses.sort((a, b) => {
                    return this.extractPrice(a.price.current) - this.extractPrice(b.price.current);
                });
                break;
            case 'price-desc':
                this.filteredCourses.sort((a, b) => {
                    return this.extractPrice(b.price.current) - this.extractPrice(a.price.current);
                });
                break;
            case 'popular':
                this.filteredCourses.sort((a, b) => {
                    return this.extractStudents(b.students) - this.extractStudents(a.students);
                });
                break;
        }
    }

    extractPrice(priceString) {
        return parseInt(priceString.replace(/[^\d]/g, ''));
    }

    extractStudents(studentsString) {
        return parseInt(studentsString.match(/\d+/)[0]);
    }

    renderCourses() {
        const coursesGrid = document.getElementById('coursesGrid');
        coursesGrid.innerHTML = this.filteredCourses.map(course => this.createCourseCard(course)).join('');
    }

    createCourseCard(course) {
        return `
            <div class="course-card">
                ${course.price.old ? `<div class="course-card__badge">–°–∫–∏–¥–∫–∞</div>` : ''}
                <img src="${course.image}" alt="${course.title}" class="course-card__image">
                <div class="course-card__content">
                    <div class="course-card__category">${course.badge}</div>
                    <h3 class="course-card__title">${course.title}</h3>
                    <p class="course-card__description">${course.description}</p>
                    <div class="course-card__meta">
                        <div class="course-card__stats">
                            <span class="course-card__stat">
                                <i class="icon">‚è±Ô∏è</i> ${course.duration}
                            </span>
                            <span class="course-card__stat">
                                <i class="icon">üë•</i> ${course.students}
                            </span>
                        </div>
                        <div class="course-card__price">
                            <span class="course-card__price-current">${course.price.current}</span>
                            ${course.price.old ? `<span class="course-card__price-old">${course.price.old}</span>` : ''}
                        </div>
                    </div>
                    <a href="course.html?id=${course.id}" class="btn btn--primary btn--full">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                </div>
            </div>
        `;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    new CourseCatalog();
}); 